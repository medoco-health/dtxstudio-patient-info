[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dtxstudio-patient-info"
version = "2.0.0"
authors = [
    {name = "Clinical Informatics Team", email = "info@medoco.it"},
]
description = "Clinical-grade patient information matching and updating system for DTX Studio"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["healthcare", "patient-matching", "clinical-informatics", "dtx", "pms", "record-linkage"]
dependencies = [
    # No external dependencies - pure Python for maximum compatibility
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[project.urls]
Homepage = "https://github.com/medoco/dtxstudio-patient-info"
Documentation = "https://github.com/medoco/dtxstudio-patient-info/blob/main/README.md"
Repository = "https://github.com/medoco/dtxstudio-patient-info.git"
"Bug Tracker" = "https://github.com/medoco/dtxstudio-patient-info/issues"

[project.scripts]
# Main entrypoints
dtxstudio-patient-updater = "dtxstudio_patient_info:main.main"

# Utility scripts
test-clinical-framework = "test_clinical_framework:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["clinical_matching*", "*.py"]
exclude = ["tests*", "*.tests*", "*.tests.*", "tests.*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yaml", "*.yml", "*.json"]

# Development and testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "test_*.py",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "clinical: Clinical validation tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["clinical_matching", "patient_info_updater", "clinical_patient_updater"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "test_*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false